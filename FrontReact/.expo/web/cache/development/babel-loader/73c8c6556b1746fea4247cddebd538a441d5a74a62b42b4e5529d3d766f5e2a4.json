{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { ToastProvider } from 'react-native-toast-notifications';\nimport RegisterScreen from \"./screens/Register/RegisterScreen\";\nimport LoginScreen from \"./screens/Login/LoginScreen\";\nimport HomeScreen from \"./screens/Home/HomeScreen\";\nimport UserContext from \"./Context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userEmail = _useState2[0],\n    setUserEmail = _useState2[1];\n  return _jsx(UserContext.Provider, {\n    value: {\n      userEmail: userEmail,\n      setUserEmail: setUserEmail\n    },\n    children: _jsx(ToastProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Register\",\n            component: RegisterScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Home\",\n            component: HomeScreen\n          })]\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","ToastProvider","RegisterScreen","LoginScreen","HomeScreen","UserContext","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","userEmail","setUserEmail","Provider","value","children","Navigator","initialRouteName","Screen","name","component"],"sources":["C:/Users/Marwa/Desktop/Simple-ReactNative-main/FrontReact/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { ToastProvider } from 'react-native-toast-notifications';\n\nimport RegisterScreen from './screens/Register/RegisterScreen';\nimport LoginScreen from './screens/Login/LoginScreen';\nimport HomeScreen from './screens/Home/HomeScreen';\nimport UserContext from './Context/UserContext';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [userEmail, setUserEmail] = useState(\"\"); // Use the useState hook\n\n  return (\n    <UserContext.Provider value={{ userEmail, setUserEmail }}>\n      <ToastProvider>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </ToastProvider>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,aAAa,QAAQ,kCAAkC;AAEhE,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAkCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,OACEN,IAAA,CAACF,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEH,SAAS,EAATA,SAAS;MAAEC,YAAY,EAAZA;IAAa,CAAE;IAAAG,QAAA,EACvDZ,IAAA,CAACN,aAAa;MAAAkB,QAAA,EACZZ,IAAA,CAACR,mBAAmB;QAAAoB,QAAA,EAClBV,KAAA,CAACC,KAAK,CAACU,SAAS;UAACC,gBAAgB,EAAC,OAAO;UAAAF,QAAA,GACvCZ,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAEtB;UAAe,CAAE,CAAC,EAC3DK,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,OAAO;YAACC,SAAS,EAAErB;UAAY,CAAE,CAAC,EACrDI,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEpB;UAAW,CAAE,CAAC;QAAA,CACpC;MAAC,CACC;IAAC,CACT;EAAC,CACI,CAAC;AAE3B,CAAC;AAED,eAAeO,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}