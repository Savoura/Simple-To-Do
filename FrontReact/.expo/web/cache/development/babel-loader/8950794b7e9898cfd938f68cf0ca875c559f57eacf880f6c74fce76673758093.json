{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport UserContext from \"../../Context/UserContext.js\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    setUserEmail = _useContext.setUserEmail;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var toast = useToast();\n  function showToast(message) {\n    toast.show(message);\n  }\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        showToast('Please enter both email and password.');\n        return;\n      }\n      try {\n        var response = yield axios.post('http://localhost:3000/login', {\n          email: email,\n          password: password\n        });\n        setUserEmail(email);\n        navigation.navigate('Home');\n        showToast(response.data.message);\n      } catch (error) {\n        showToast('Failed to login. Please try again later.');\n        console.error('Login error:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRegisterNavigation = function handleRegisterNavigation() {\n    navigation.navigate('Register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), _jsx(TouchableOpacity, {\n      onPress: handleRegisterNavigation,\n      style: styles.registerButton,\n      children: _jsx(Text, {\n        style: styles.registerButtonText,\n        children: \"Don't have an account? Register\"\n      })\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useContext","View","TextInput","Button","TouchableOpacity","Text","axios","UserContext","useToast","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","setUserEmail","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","toast","showToast","message","show","handleLogin","_ref2","_asyncToGenerator","response","post","navigate","data","error","console","apply","arguments","handleRegisterNavigation","style","styles","container","children","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","title","onPress","registerButton","registerButtonText"],"sources":["C:/Users/Marwa/Desktop/Simple-ReactNative-main/FrontReact/screens/Login/LoginScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { View, TextInput, Button, TouchableOpacity, Text} from 'react-native';\nimport axios from 'axios';\nimport UserContext from '../../Context/UserContext.js';\nimport { useToast } from \"react-native-toast-notifications\";\n\nconst LoginScreen = ({ navigation }) => {\n    const { setUserEmail } = useContext(UserContext);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const toast = useToast();\n\n    function showToast(message) {\n        toast.show(message);\n    }\n\n    const handleLogin = async () => {\n        if (!email || !password) {\n            showToast('Please enter both email and password.');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:3000/login', {\n                email,\n                password,\n            });\n            setUserEmail(email);\n            navigation.navigate('Home');\n            showToast(response.data.message);\n        } catch (error) {\n            showToast('Failed to login. Please try again later.');\n            console.error('Login error:', error);\n        }\n    };\n\n    const handleRegisterNavigation = () => {\n        navigation.navigate('Register');\n    };\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n            />\n            <Button title=\"Login\" onPress={handleLogin} />\n\n            <TouchableOpacity onPress={handleRegisterNavigation} style={styles.registerButton}>\n                <Text style={styles.registerButtonText}>Don't have an account? Register</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}